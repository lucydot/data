 running on   64 total cores
 distrk:  each k-point on    4 cores,   16 groups
 distr:  one band on    1 cores,    4 groups
 using from now: INCAR     
 vasp.5.3.5 31Mar14 (build Apr 15 2015 10:45:18) complex                        
  
 POSCAR found type information on POSCAR  Si
 POSCAR found :  1 types and       2 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default, NPAR=number of cores might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have selected ISYM=2 for HF type calculation. This will symmetrize |
|      the charge density but not the exchange potential.                     |
|      I suggest to use ISYM=3 instead. This uses symmetry to obtain          |
|      the orbitals at all k-points in the Brillouine zone, but does not      |
|      apply symmetry to the Hartree potential directly.                      |
|      The resultant charge might have lower symmetry than the crystal,       |
|      but at least, Hartree and exchange are fully compatible.               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 POSCAR, INCAR and KPOINTS ok, starting setup
 WARNING: small aliasing (wrap around) errors must be expected
 FFT: planning ...
 WAVECAR not read
 WARNING: random wavefunctions but no delay for mixing, default for NELMDL
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.206947730262E+03    0.20695E+03   -0.19835E+04  4776   0.129E+03
DAV:   2     0.618480786874E+01   -0.20076E+03   -0.19395E+03  4776   0.376E+02
DAV:   3    -0.159765365765E+01   -0.77825E+01   -0.71050E+01  4776   0.523E+01
DAV:   4    -0.166467790441E+01   -0.67024E-01   -0.67028E-01  4776   0.622E+00
DAV:   5    -0.166495312749E+01   -0.27522E-03   -0.27535E-03  4776   0.380E-01
 gam= 0.000 g(H,U,f)=  0.151E-01 0.183E-01 0.143E-20 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6    -0.125083647283E+02   -0.10843E+02   -0.27535E-03  4776   0.334E-01 0.000E+00
 gam= 0.000 trial= 0.400  step= 1.230 mean= 0.400
 gam= 0.362 g(H,U,f)=  0.794E-02 0.417E-02 0.614E-19 ort(H,U,f) =-0.593E-02 0.781E-02 0.379E-19
CGA:   7    -0.125295923953E+02   -0.21228E-01   -0.20548E-01  4776   0.121E-01 0.188E-02
 gam= 0.362 trial= 0.441  step= 0.935 mean= 0.441
 gam= 0.236 g(H,U,f)=  0.220E-02 0.652E-03 0.640E-40 ort(H,U,f) =-0.239E-02 0.265E-02 0.309E-39
CGA:   8    -0.125356347534E+02   -0.60424E-02   -0.59771E-02  4776   0.285E-02 0.267E-03
 gam= 0.236 trial= 0.466  step= 0.897 mean= 0.466
 gam= 0.115 g(H,U,f)=  0.283E-03 0.450E-04 0.372E-18 ort(H,U,f) =-0.315E-03 0.319E-03-0.343E-18
CGA:   9    -0.125369444333E+02   -0.13097E-02   -0.13086E-02  4776   0.328E-03 0.440E-05
 gam= 0.115 trial= 0.488  step= 0.788 mean= 0.488
 gam= 0.151 g(H,U,f)=  0.410E-04 0.836E-05 0.246E-19 ort(H,U,f) =-0.371E-04 0.327E-04 0.188E-18
CGA:  10    -0.125370733482E+02   -0.12891E-03   -0.12954E-03  4776   0.494E-04-0.447E-05
 gam= 0.151 trial= 0.503  step= 0.816 mean= 0.503
 gam= 0.204 g(H,U,f)=  0.779E-05 0.227E-05 0.156E-30 ort(H,U,f) =-0.720E-05 0.670E-05 0.111E-29
CGA:  11    -0.125370931429E+02   -0.19795E-04   -0.19866E-04  4776   0.101E-04-0.503E-06
 gam= 0.204 trial= 0.518  step= 0.881 mean= 0.518
 gam= 0.217 g(H,U,f)=  0.168E-05 0.496E-06 0.441E-56 ort(H,U,f) =-0.193E-05 0.168E-05 0.644E-55
CGA:  12    -0.125370974782E+02   -0.43353E-05   -0.43841E-05  4776   0.218E-05-0.253E-06
 gam= 0.217 trial= 0.537  step= 1.060 mean= 0.537
 gam= 0.255 g(H,U,f)=  0.510E-06 0.469E-07 0.399E-19 ort(H,U,f) =-0.536E-06 0.251E-06-0.193E-18
CGA:  13    -0.125370985290E+02   -0.10508E-05   -0.11260E-05  4776   0.557E-06-0.285E-06
 gam= 0.255 trial= 0.563  step= 0.800 mean= 0.563
 gam= 0.126 g(H,U,f)=  0.651E-07 0.497E-08 0.397E-57 ort(H,U,f) =-0.321E-07 0.295E-07-0.878E-58
CGA:  14    -0.125370987219E+02   -0.19296E-06   -0.19351E-06  4776   0.701E-07-0.260E-08
 gam= 0.126 trial= 0.575  step= 0.419 mean= 0.575
   1 F= -.12537099E+02 E0= -.12537099E+02  d E =-.125371E+02
 curvature:   0.00 expect dE=       NaN dE for cont linesearch        NaN
 trial: gam= 0.00000 g(F)=        NaN g(S)=        NaN ort =       NaN (trialstep = 0.100E+01)
 search vector abs. value=        NaN
 reached required accuracy - stopping structural energy minimisation
 writing wavefunctions
