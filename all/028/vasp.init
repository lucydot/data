 running on   64 total cores
 distrk:  each k-point on    4 cores,   16 groups
 distr:  one band on    1 cores,    4 groups
 using from now: INCAR     
 vasp.5.3.5 31Mar14 (build Apr 15 2015 10:45:18) complex                        
  
 POSCAR found type information on POSCAR  Si
 POSCAR found :  1 types and       2 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default, NPAR=number of cores might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have selected ISYM=2 for HF type calculation. This will symmetrize |
|      the charge density but not the exchange potential.                     |
|      I suggest to use ISYM=3 instead. This uses symmetry to obtain          |
|      the orbitals at all k-points in the Brillouine zone, but does not      |
|      apply symmetry to the Hartree potential directly.                      |
|      The resultant charge might have lower symmetry than the crystal,       |
|      but at least, Hartree and exchange are fully compatible.               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 WARNING: stress and forces are not correct
 POSCAR, INCAR and KPOINTS ok, starting setup
 WARNING: small aliasing (wrap around) errors must be expected
 FFT: planning ...
 WAVECAR not read
 charge-density read from file: Name                                    
 WARNING: random wavefunctions but no delay for mixing, default for NELMDL
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.206218214827E+03    0.20622E+03   -0.19823E+04  4776   0.129E+03
DAV:   2     0.611965070777E+01   -0.20010E+03   -0.19347E+03  4776   0.375E+02
DAV:   3    -0.142931586022E+01   -0.75490E+01   -0.69212E+01  4776   0.516E+01
DAV:   4    -0.149285339007E+01   -0.63538E-01   -0.63254E-01  4776   0.606E+00
DAV:   5    -0.149309161171E+01   -0.23822E-03   -0.23838E-03  4776   0.356E-01
 gam= 0.000 g(H,U,f)=  0.105E+00 0.697E-01 0.353E-02 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6    -0.123881217945E+02   -0.10895E+02   -0.23838E-03  4776   0.179E+00 0.000E+00
 gam= 0.000 trial= 0.400  step= 1.067 mean= 0.400
 gam= 0.293 g(H,U,f)=  0.248E-01 0.276E-01 0.877E-16 ort(H,U,f) =-0.203E-01 0.397E-01-0.138E-16
CGA:   7    -0.124907952662E+02   -0.10267E+00   -0.95281E-01  4776   0.524E-01 0.194E-01
 gam= 0.293 trial= 0.433  step= 1.219 mean= 0.433
 gam= 0.339 g(H,U,f)=  0.140E-01 0.377E-02 0.304E-42 ort(H,U,f) =-0.110E-01 0.136E-01 0.150E-41
CGA:   8    -0.125271310706E+02   -0.36336E-01   -0.35398E-01  4776   0.178E-01 0.261E-02
 gam= 0.339 trial= 0.473  step= 0.955 mean= 0.473
 gam= 0.120 g(H,U,f)=  0.193E-02 0.194E-03 0.759E-10 ort(H,U,f) =-0.162E-02 0.183E-02-0.632E-10
CGA:   9    -0.125360878926E+02   -0.89568E-02   -0.89057E-02  4776   0.212E-02 0.210E-03
 gam= 0.120 trial= 0.497  step= 0.820 mean= 0.497
 gam= 0.125 g(H,U,f)=  0.240E-03 0.254E-04 0.217E-17 ort(H,U,f) =-0.141E-03 0.142E-03 0.166E-17
CGA:  10    -0.125369690407E+02   -0.88115E-03   -0.88085E-03  4776   0.265E-03 0.127E-05
 gam= 0.125 trial= 0.513  step= 0.822 mean= 0.513
 gam= 0.128 g(H,U,f)=  0.280E-04 0.602E-05 0.343E-48 ort(H,U,f) =-0.223E-04 0.203E-04 0.238E-48
CGA:  11    -0.125370778063E+02   -0.10877E-03   -0.10907E-03  4776   0.340E-04-0.198E-05
 gam= 0.128 trial= 0.528  step= 0.985 mean= 0.528
 gam= 0.200 g(H,U,f)=  0.534E-05 0.145E-05 0.127E-49 ort(H,U,f) =-0.487E-05 0.416E-05 0.247E-49
CGA:  12    -0.125370942700E+02   -0.16464E-04   -0.16625E-04  4776   0.679E-05-0.704E-06
 gam= 0.200 trial= 0.551  step= 1.034 mean= 0.551
 gam= 0.261 g(H,U,f)=  0.150E-05 0.269E-06 0.160E-18 ort(H,U,f) =-0.118E-05 0.974E-06 0.504E-18
CGA:  13    -0.125370976578E+02   -0.33878E-05   -0.34384E-05  4776   0.177E-05-0.208E-06
 gam= 0.261 trial= 0.575  step= 1.057 mean= 0.575
 gam= 0.257 g(H,U,f)=  0.432E-06 0.223E-07 0.190E-47 ort(H,U,f) =-0.307E-06 0.149E-06 0.188E-46
CGA:  14    -0.125370985271E+02   -0.86931E-06   -0.90749E-06  4776   0.455E-06-0.158E-06
 gam= 0.257 trial= 0.599  step= 0.831 mean= 0.599
   1 F= -.12537099E+02 E0= -.12537099E+02  d E =-.125371E+02
 curvature:   0.00 expect dE=       NaN dE for cont linesearch        NaN
 trial: gam= 0.00000 g(F)=        NaN g(S)=        NaN ort =       NaN (trialstep = 0.100E+01)
 search vector abs. value=        NaN
 reached required accuracy - stopping structural energy minimisation
 writing wavefunctions
