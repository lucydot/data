 running on   64 total cores
 distrk:  each k-point on    4 cores,   16 groups
 distr:  one band on    1 cores,    4 groups
 using from now: INCAR     
 vasp.5.3.5 31Mar14 (build Apr 15 2015 10:45:18) complex                        
  
 POSCAR found type information on POSCAR  Cd Te
 POSCAR found :  2 types and       2 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default, NPAR=number of cores might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have selected ISYM=2 for HF type calculation. This will symmetrize |
|      the charge density but not the exchange potential.                     |
|      I suggest to use ISYM=3 instead. This uses symmetry to obtain          |
|      the orbitals at all k-points in the Brillouine zone, but does not      |
|      apply symmetry to the Hartree potential directly.                      |
|      The resultant charge might have lower symmetry than the crystal,       |
|      but at least, Hartree and exchange are fully compatible.               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 WARNING: stress and forces are not correct
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ...
 WAVECAR not read
 charge-density read from file: Name                                    
 WARNING: random wavefunctions but no delay for mixing, default for NELMDL
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.639668383978E+03    0.63967E+03   -0.43433E+04  2096   0.188E+03
DAV:   2     0.935815084971E+02   -0.54609E+03   -0.50653E+03  2096   0.630E+02
DAV:   3     0.309310218937E+02   -0.62650E+02   -0.58569E+02  2096   0.156E+02
DAV:   4     0.281186013861E+02   -0.28124E+01   -0.28069E+01  2096   0.323E+01
DAV:   5     0.280706074445E+02   -0.47994E-01   -0.47985E-01  2096   0.361E+00
 gam= 0.000 g(H,U,f)=  0.605E+00 0.244E+00 0.196E-37 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6    -0.549864567593E+01   -0.33569E+02   -0.47985E-01  2096   0.849E+00 0.000E+00
 gam= 0.000 trial= 0.400  step= 0.871 mean= 0.400
 gam= 0.231 g(H,U,f)=  0.879E-01 0.109E+00 0.227E-17 ort(H,U,f) =-0.135E+00 0.144E+00 0.336E-17
CGA:   7    -0.587067510624E+01   -0.37203E+00   -0.36969E+00  2096   0.196E+00 0.901E-02
 gam= 0.231 trial= 0.424  step= 1.093 mean= 0.424
 gam= 0.409 g(H,U,f)=  0.596E-01 0.207E-01 0.923E-21 ort(H,U,f) =-0.456E-01 0.562E-01 0.286E-20
CGA:   8    -0.598227399657E+01   -0.11160E+00   -0.10846E+00  2096   0.803E-01 0.105E-01
 gam= 0.409 trial= 0.457  step= 0.910 mean= 0.457
 gam= 0.135 g(H,U,f)=  0.916E-02 0.169E-02 0.181E-60 ort(H,U,f) =-0.954E-02 0.112E-01 0.277E-60
CGA:   9    -0.602114832760E+01   -0.38874E-01   -0.38492E-01  2096   0.109E-01 0.168E-02
 gam= 0.135 trial= 0.480  step= 0.767 mean= 0.480
 gam= 0.146 g(H,U,f)=  0.118E-02 0.400E-03 0.417E-50 ort(H,U,f) =-0.138E-02 0.142E-02 0.792E-50
CGA:  10    -0.602540539595E+01   -0.42571E-02   -0.42505E-02  2096   0.158E-02 0.399E-04
 gam= 0.146 trial= 0.494  step= 0.887 mean= 0.494
 gam= 0.245 g(H,U,f)=  0.270E-03 0.118E-03 0.390E-20 ort(H,U,f) =-0.313E-03 0.313E-03 0.582E-20
CGA:  11    -0.602610938801E+01   -0.70399E-03   -0.70398E-03  2096   0.388E-03-0.220E-06
 gam= 0.245 trial= 0.514  step= 0.958 mean= 0.514
 gam= 0.314 g(H,U,f)=  0.954E-04 0.264E-04 0.135E-49 ort(H,U,f) =-0.870E-04 0.878E-04 0.370E-49
CGA:  12    -0.602629555208E+01   -0.18616E-03   -0.18598E-03  2096   0.122E-03 0.800E-06
 gam= 0.314 trial= 0.536  step= 0.931 mean= 0.536
 gam= 0.220 g(H,U,f)=  0.229E-04 0.389E-05 0.369E-27 ort(H,U,f) =-0.186E-04 0.187E-04 0.203E-26
CGA:  13    -0.602635237893E+01   -0.56827E-04   -0.56800E-04  2096   0.268E-04 0.120E-06
 gam= 0.220 trial= 0.556  step= 0.794 mean= 0.556
 gam= 0.182 g(H,U,f)=  0.400E-05 0.890E-06 0.111E-16 ort(H,U,f) =-0.366E-05 0.341E-05 0.755E-16
CGA:  14    -0.602636299710E+01   -0.10618E-04   -0.10649E-04  2096   0.489E-05-0.259E-06
 gam= 0.182 trial= 0.568  step= 0.808 mean= 0.568
 gam= 0.257 g(H,U,f)=  0.983E-06 0.273E-06 0.192E-65 ort(H,U,f) =-0.854E-06 0.785E-06 0.140E-64
CGA:  15    -0.602636494496E+01   -0.19479E-05   -0.19561E-05  2096   0.126E-05-0.688E-07
 gam= 0.257 trial= 0.580  step= 0.832 mean= 0.580
 gam= 0.272 g(H,U,f)=  0.268E-06 0.738E-07 0.184E-24 ort(H,U,f) =-0.209E-06 0.237E-06-0.125E-23
CGA:  16    -0.602636546352E+01   -0.51856E-06   -0.51502E-06  2096   0.342E-06 0.278E-07
 gam= 0.272 trial= 0.592  step= 0.886 mean= 0.592
   1 F= -.60263655E+01 E0= -.60263655E+01  d E =-.602637E+01
 curvature:   0.00 expect dE=       NaN dE for cont linesearch        NaN
 trial: gam= 0.00000 g(F)=        NaN g(S)=        NaN ort =       NaN (trialstep = 0.100E+01)
 search vector abs. value=        NaN
 reached required accuracy - stopping structural energy minimisation
 writing wavefunctions
