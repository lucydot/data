 running on  192 total cores
 distrk:  each k-point on   24 cores,    8 groups
 distr:  one band on    6 cores,    4 groups
 using from now: INCAR     
 vasp.5.4.1 24Jun15 (build Nov 25 2015 16:01:35) complex                        
  
 POSCAR found type information on POSCAR  Cu Zn Sn S 
 POSCAR found :  4 types and       8 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default, NPAR=number of cores might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have selected ISYM=2 for HF type calculation. This will symmetrize |
|      the charge density but not the exchange potential.                     |
|      I suggest to use ISYM=3 instead. This uses symmetry to obtain          |
|      the orbitals at all k-points in the Brillouine zone, but does not      |
|      apply symmetry to the Hartree potential directly.                      |
|      The resultant charge might have lower symmetry than the crystal,       |
|      but at least, Hartree and exchange are fully compatible.               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 POSCAR, INCAR and KPOINTS ok, starting setup
 WARNING: small aliasing (wrap around) errors must be expected
 FFT: planning ...
 WAVECAR not read
 WARNING: random wavefunctions but no delay for mixing, default for NELMDL
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.485591482222E+04    0.48559E+04   -0.15913E+05 31252   0.709E+03
DAV:   2     0.132669061488E+04   -0.35292E+04   -0.34528E+04 31252   0.210E+03
DAV:   3     0.383845932128E+03   -0.94284E+03   -0.91565E+03 31252   0.502E+02
DAV:   4     0.208804594884E+03   -0.17504E+03   -0.16548E+03 31252   0.206E+02
DAV:   5     0.188948787504E+03   -0.19856E+02   -0.18970E+02 31252   0.650E+01
 gam= 0.000 g(H,U,f)=  0.190E+04 0.298E+04 0.229E+02 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6     0.184092131875E+03   -0.48567E+01   -0.18970E+02 31252   0.491E+04 0.000E+00
 gam= 0.000 trial= 0.400  step= 0.194 mean= 0.400
 gam= 0.081 g(H,U,f)=  0.357E+03 0.404E+02 0.634E-17 ort(H,U,f) =-0.784E+03-0.116E+03-0.332E-16
CGA:   7     0.758699260376E+01   -0.17651E+03   -0.47524E+03 31252   0.398E+03-0.900E+03
 gam= 0.081 trial= 0.390  step= 0.219 mean= 0.390
 gam= 0.056 g(H,U,f)=  0.206E+02 0.156E+01 0.111E-09 ort(H,U,f) = 0.232E+02-0.455E+01 0.947E-09
CGA:   8    -0.314928398429E+02   -0.39080E+02   -0.35607E+02 31252   0.222E+02 0.187E+02
 gam= 0.056 trial= 0.381  step= 0.281 mean= 0.381
 gam= 0.565 g(H,U,f)=  0.691E+01 0.562E+01 0.258E-10 ort(H,U,f) =-0.205E+01 0.188E+01-0.179E-10
CGA:   9    -0.347977682874E+02   -0.33049E+01   -0.32667E+01 31252   0.125E+02-0.171E+00
 gam= 0.565 trial= 0.376  step= 0.399 mean= 0.376
 gam= 0.349 g(H,U,f)=  0.342E+01 0.949E+00 0.123E-38 ort(H,U,f) =-0.151E+01 0.218E+01 0.311E-38
CGA:  10    -0.372961852074E+02   -0.24984E+01   -0.24838E+01 31252   0.437E+01 0.667E+00
 gam= 0.349 trial= 0.377  step= 0.303 mean= 0.377
