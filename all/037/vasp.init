 running on   64 total cores
 distrk:  each k-point on    4 cores,   16 groups
 distr:  one band on    1 cores,    4 groups
 using from now: INCAR     
 vasp.5.3.5 31Mar14 (build Apr 15 2015 10:45:18) complex                        
  
 POSCAR found type information on POSCAR  Cd Te
 POSCAR found :  2 types and       2 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default, NPAR=number of cores might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have selected ISYM=2 for HF type calculation. This will symmetrize |
|      the charge density but not the exchange potential.                     |
|      I suggest to use ISYM=3 instead. This uses symmetry to obtain          |
|      the orbitals at all k-points in the Brillouine zone, but does not      |
|      apply symmetry to the Hartree potential directly.                      |
|      The resultant charge might have lower symmetry than the crystal,       |
|      but at least, Hartree and exchange are fully compatible.               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ...
 WAVECAR not read
 WARNING: random wavefunctions but no delay for mixing, default for NELMDL
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.638506052399E+03    0.63851E+03   -0.43412E+04  2096   0.188E+03
DAV:   2     0.944774123183E+02   -0.54403E+03   -0.50423E+03  2096   0.626E+02
DAV:   3     0.308008303390E+02   -0.63677E+02   -0.60526E+02  2096   0.157E+02
DAV:   4     0.279054101358E+02   -0.28954E+01   -0.28895E+01  2096   0.328E+01
DAV:   5     0.278530152863E+02   -0.52395E-01   -0.52387E-01  2096   0.370E+00
 gam= 0.000 g(H,U,f)=  0.578E+01 0.136E+01 0.194E-33 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6    -0.459153702937E+01   -0.32445E+02   -0.52387E-01  2096   0.714E+01 0.000E+00
 gam= 0.000 trial= 0.400  step= 0.341 mean= 0.400
 gam= 0.045 g(H,U,f)=  0.109E+00 0.210E+00 0.332E-19 ort(H,U,f) =-0.368E+00 0.454E+00-0.121E-18
CGA:   7    -0.579789758295E+01   -0.12064E+01   -0.12152E+01  2096   0.319E+00 0.855E-01
 gam= 0.045 trial= 0.397  step= 1.000 mean= 0.397
 gam= 0.305 g(H,U,f)=  0.650E-01 0.324E-01 0.870E-49 ort(H,U,f) =-0.406E-01 0.766E-01 0.178E-48
CGA:   8    -0.596943040449E+01   -0.17153E+00   -0.16150E+00  2096   0.974E-01 0.360E-01
 gam= 0.305 trial= 0.427  step= 0.818 mean= 0.427
 gam= 0.293 g(H,U,f)=  0.210E-01 0.751E-02 0.107E-23 ort(H,U,f) =-0.231E-01 0.252E-01 0.327E-23
CGA:   9    -0.601416723216E+01   -0.44737E-01   -0.44296E-01  2096   0.285E-01 0.214E-02
 gam= 0.293 trial= 0.447  step= 0.675 mean= 0.447
 gam= 0.230 g(H,U,f)=  0.578E-02 0.784E-03 0.365E-25 ort(H,U,f) =-0.257E-02 0.300E-02 0.181E-24
CGA:  10    -0.602405770954E+01   -0.98905E-02   -0.98290E-02  2096   0.657E-02 0.427E-03
 gam= 0.230 trial= 0.458  step= 0.525 mean= 0.458
 gam= 0.116 g(H,U,f)=  0.530E-03 0.229E-03 0.130E-22 ort(H,U,f) =-0.802E-03 0.812E-03 0.536E-22
CGA:  11    -0.602580820968E+01   -0.17505E-02   -0.17502E-02  2096   0.759E-03 0.933E-05
 gam= 0.116 trial= 0.461  step= 0.870 mean= 0.461
 gam= 0.293 g(H,U,f)=  0.165E-03 0.579E-04 0.103E-43 ort(H,U,f) =-0.157E-03 0.146E-03 0.354E-43
CGA:  12    -0.602613669698E+01   -0.32849E-03   -0.33074E-03  2096   0.222E-03-0.113E-04
 gam= 0.293 trial= 0.482  step= 0.852 mean= 0.482
 gam= 0.291 g(H,U,f)=  0.529E-04 0.118E-04 0.178E-16 ort(H,U,f) =-0.454E-04 0.404E-04 0.126E-15
CGA:  13    -0.602622914602E+01   -0.92449E-04   -0.93389E-04  2096   0.646E-04-0.499E-05
 gam= 0.291 trial= 0.500  step= 0.757 mean= 0.500
 gam= 0.197 g(H,U,f)=  0.107E-04 0.203E-05 0.525E-22 ort(H,U,f) =-0.101E-04 0.853E-05 0.189E-21
CGA:  14    -0.602625287756E+01   -0.23732E-04   -0.23934E-04  2096   0.128E-04-0.158E-05
 gam= 0.197 trial= 0.513  step= 0.845 mean= 0.513
 gam= 0.404 g(H,U,f)=  0.449E-05 0.660E-06 0.949E-39 ort(H,U,f) =-0.389E-05 0.150E-05-0.310E-38
CGA:  15    -0.602625774350E+01   -0.48659E-05   -0.52580E-05  2096   0.515E-05-0.240E-05
 gam= 0.404 trial= 0.530  step= 0.574 mean= 0.530
 gam= 0.165 g(H,U,f)=  0.662E-06 0.189E-06 0.115E-28 ort(H,U,f) =-0.270E-06 0.460E-06-0.332E-29
CGA:  16    -0.602625894974E+01   -0.12062E-05   -0.12018E-05  2096   0.851E-06 0.189E-06
 gam= 0.165 trial= 0.532  step= 0.714 mean= 0.532
 gam= 0.300 g(H,U,f)=  0.199E-06 0.562E-07 0.134E-20 ort(H,U,f) =-0.153E-06 0.137E-06 0.186E-20
CGA:  17    -0.602625926462E+01   -0.31488E-06   -0.31477E-06  2096   0.255E-06-0.158E-07
 gam= 0.300 trial= 0.541  step= 0.916 mean= 0.541
   1 F= -.60262593E+01 E0= -.60262593E+01  d E =-.602626E+01
 curvature:   0.00 expect dE=       NaN dE for cont linesearch        NaN
 trial: gam= 0.00000 g(F)=        NaN g(S)=        NaN ort =       NaN (trialstep = 0.100E+01)
 search vector abs. value=        NaN
 reached required accuracy - stopping structural energy minimisation
 writing wavefunctions
